#{extends 'common/front/accountMain.html' /}
#{set title:'我的财富 | 安全中心 | 修改密码' /}
#{set smallclass:4 /}

<!-- 账户主要表格 -->
<div class="account-infor">
	<!-- 修改密码 -->
	<div class="account-setpassword">
		<h2 class="account-title">
			<span class="left bankcard-title c3"><i class="icon psw-icon"></i>修改密码</span>
		</h2>
		<form action="@{front.account.MySecurityCtrl.restPassword()}" method="post" id="resetPassword">
			#{authenticityToken /}
			<ul class="register-list mt50">
				<li class="clearfix mb30">
					<span class="register-left left">
						<i class="important-point">*</i>原登录密码
					</span>
					<div class="register-wrap left">
						<input type="text" id="oldPassword" name="oldPassword" class="text" value="" placeholder="输入登录密码" oninput="$(this).integerAndLetters()" onkeyup="$(this).integerAndLetters()" maxlength="15"  
						onpaste="return false" oncontextmenu="return false" oncopy="return false" oncut="return false">
					</div>
				</li>
				<li class="clearfix mb30">
					<span class="register-left left">
						<i class="important-point">*</i>新登录密码
					</span>
					<div class="register-wrap left">
						<input type="text" id="password" name="password" class="text" value="" placeholder="6~15位字母或数字组合区分大小写" oninput="$(this).integerAndLetters()" onkeyup="$(this).integerAndLetters()" maxlength="15" 
						onpaste="return false" oncontextmenu="return false" oncopy="return false" oncut="return false">
						<i class="password-show" id="passwordShow"></i>
						<div class="password-level" id="passwordLevel">
							<span>弱</span>
							<span>中</span>
							<span>强</span>
						</div>
					</div>
				</li>
				<li class="clearfix">
					<span class="register-left left">
						&nbsp;
					</span>
					<input type="submit" value="保存并重新登录" class="condition-btn btn left">
				</li>
			</ul>
		</form>
		<p class="returnprev">
			<a href="@{front.account.MySecurityCtrl.securityPre()}" class="backpage"><i class="icon return-icon"></i>返回</a>
		</p>
	</div>
</div>


<script type="text/javascript">
require(['front'],function(front){
	//判断密码强度
	require(['passwordLevel']);
	
	//密码框类型改变
	$("#oldPassword").focus(function(){
		$(this).attr("type","password");
	})
	//密码显示隐藏
	if('placeholder' in document.createElement('input')){
		$('#password').on('input',function(){
			if($(this).val() != ''){
				$('#passwordShow').show();
			}else{
				$('#passwordShow').hide();
			}
		}).trigger('input');
		$('#passwordShow').click(function(){
			if($(this).hasClass('showpw')){
				$(this).removeClass('showpw');
				$('#password').attr('type','password');
			}else{
				$(this).addClass('showpw');
				$('#password').attr('type','text');
			}
		});
		//密码框类型改变
		$("#password").focus(function(){
			if($(this).attr("type") != "password"){
				$(this).attr("type","password");
				$('#passwordShow').removeClass('showpw');
			}
		})
	}else{
		$('#passwordShow').hide();
	}
	
	require(["validation/validateExt"]);
	$("#resetPassword").validate({
		errorPlacement: function(error, element) {
			if(element.is("#oldPassword")){
				$("p[id='oldPassword-error']").remove();
				error.addClass('register-error').appendTo(element.parent());
				
			}else if(element.is("#password")){
				$("p[id='password-error']").remove();
				error.addClass('register-error').appendTo(element.parent());
				
			}
		},
		success:function(label){
			label.removeClass('error register-error');
			$(label).parent().children("input").eq(0).addClass("focus");
		},
		errorElement:'p',
		rules:{
			"oldPassword":{
				required:true,
				isPassWord:true,
				rangelength:[6,15]
			},
			"password":{
				required:true,
				isPassWord:true,
				rangelength:[6,15]
			}
		},
		messages:{
			"oldPassword":{
				required:"密码不能为空",
				isPassWord:"密码不正确",
				rangelength:"密码不正确"
			},
			"password":{
				required:"密码不能为空",
				isPassWord:"密码不正确",
				rangelength:"密码不正确"
			}
		}
	});
});

</script>
